{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\denny\\\\Documents\\\\CSE120\\\\FromMyGitHub\\\\BART12\\\\client\\\\src\\\\Attempts\\\\1st\\\\Components\\\\updateTable.js\";\nimport React, { Component } from 'react'; //import {Link} from \"react-router-dom\";\n\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from 'moment';\nimport Table from 'react-bootstrap/Table'; //table pulls data from DB [projectUpdates table]\n\nconst ProjUpdates = item => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectUpdates.assetID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectUpdates.projID\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectUpdates.progress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: item.projectUpdates.updated_at\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = ProjUpdates;\n\nclass UpdateTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUpdates = () => {\n      var date = moment().utcOffset('0').format('YYYY-MM-DD');\n      console.log(date);\n      fetch(`http://localhost:4006/projUpdates/${date}`).then(res => res.json()).then(projectUpdates => this.setState({\n        projectUpdates\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      //type : '',        //specifiy notification type [danger, info, etc]\n      projectUpdates: []\n    };\n  } //once compnent mounts data is pulled from DB\n\n\n  componentDidMount() {\n    this.getUpdates();\n  }\n\n  UpdateList() {\n    return this.state.projectUpdates.map((curr, index) => {\n      return /*#__PURE__*/_jsxDEV(ProjUpdates, {\n        projectUpdates: curr\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    });\n  } //should just fetch from DB\n\n\n  render() {\n    const {\n      projectUpdates\n    } = this.state; //console.log(this.state)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-striped table-light\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Asset ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.UpdateList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UpdateTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjUpdates\");","map":{"version":3,"sources":["C:/Users/denny/Documents/CSE120/FromMyGitHub/BART12/client/src/Attempts/1st/Components/updateTable.js"],"names":["React","Component","moment","Table","ProjUpdates","item","projectUpdates","assetID","projID","progress","updated_at","UpdateTable","constructor","props","getUpdates","date","utcOffset","format","console","log","fetch","then","res","json","setState","catch","err","state","componentDidMount","UpdateList","map","curr","index","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CAGA;;AAEA,MAAMC,WAAW,GAAGC,IAAI,iBACpB;AAAA,0BACI;AAAA,cAAKA,IAAI,CAACC,cAAL,CAAoBC;AAAzB;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA,cAAKF,IAAI,CAACC,cAAL,CAAoBE;AAAzB;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI;AAAA,cAAKH,IAAI,CAACC,cAAL,CAAoBG;AAAzB;AAAA;AAAA;AAAA;AAAA,UAHJ,eAII;AAAA,cAAKJ,IAAI,CAACC,cAAL,CAAoBI;AAAzB;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMN,W;;AASN,MAAMO,WAAN,SAA0BV,SAA1B,CAAmC;AAEhCW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBjBC,UApBiB,GAoBJ,MAAM;AAEf,UAAIC,IAAI,GAAGb,MAAM,GAAGc,SAAT,CAAmB,GAAnB,EAAwBC,MAAxB,CAA+B,YAA/B,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAK,MAAAA,KAAK,CAAE,qCAAoCL,IAAK,EAA3C,CAAL,CACKM,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUf,cAAc,IAAI,KAAKkB,QAAL,CAAc;AAAClB,QAAAA;AAAD,OAAd,CAF5B,EAGKmB,KAHL,CAGWC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAHlB;AAIH,KA7BgB;;AAEd,SAAKC,KAAL,GAAa;AACZ;AACArB,MAAAA,cAAc,EAAG;AAFL,KAAb;AAIH,GAR+B,CAU/B;;;AACAsB,EAAAA,iBAAiB,GAAE;AACf,SAAKd,UAAL;AACH;;AAEDe,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKF,KAAL,CAAWrB,cAAX,CAA0BwB,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,0BAAO,QAAC,WAAD;AAAa,QAAA,cAAc,EAAID;AAA/B,SAA4CC,KAA5C;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAnB8B,CAqB/B;;;AAcAC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAC3B,MAAAA;AAAD,QAAmB,KAAKqB,KAA9B,CADI,CAEJ;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAG,2BAAjB;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,KAAK,MAArB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,oBACC,KAAKE,UAAL;AADD;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAzD8B;;AA4DnC,eAAelB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import {Link} from \"react-router-dom\";\r\nimport '../styles.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from 'moment'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\n//table pulls data from DB [projectUpdates table]\r\n\r\nconst ProjUpdates = item => (\r\n    <tr>\r\n        <td>{item.projectUpdates.assetID}</td>\r\n        <td>{item.projectUpdates.projID}</td>\r\n        <td>{item.projectUpdates.progress}</td>\r\n        <td>{item.projectUpdates.updated_at}</td>\r\n    </tr>\r\n)\r\n\r\nclass UpdateTable extends Component{\r\n    \r\n   constructor(props){\r\n       super(props);\r\n       this.state = {  \r\n        //type : '',        //specifiy notification type [danger, info, etc]\r\n        projectUpdates : []\r\n    }\r\n   }\r\n\r\n    //once compnent mounts data is pulled from DB\r\n    componentDidMount(){\r\n        this.getUpdates();\r\n    }\r\n\r\n    UpdateList(){\r\n        return this.state.projectUpdates.map((curr, index) => {\r\n            return <ProjUpdates projectUpdates = {curr} key = {index} />\r\n        });\r\n    }\r\n\r\n    //should just fetch from DB\r\n    getUpdates = () => {\r\n\r\n        var date = moment().utcOffset('0').format('YYYY-MM-DD');\r\n        console.log(date)\r\n\r\n        fetch(`http://localhost:4006/projUpdates/${date}`)\r\n            .then(res => res.json())\r\n            .then(projectUpdates => this.setState({projectUpdates}))\r\n            .catch(err => console.log(err))\r\n    } \r\n\r\n\r\n\r\n    render(){\r\n        const {projectUpdates} = this.state;\r\n        //console.log(this.state)\r\n\r\n        return(\r\n            <div className = 'table-striped table-light'>\r\n            <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Asset ID</th>\r\n                        <th>Project ID</th>\r\n                        <th>Progress</th>\r\n                        <th>Updated At</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.UpdateList()}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UpdateTable;\r\n"]},"metadata":{},"sourceType":"module"}